# Extra shell function and environment setup for python
function mkpyvenv() {
  virtualenv venv

  # Installing libraries if requirements.txt is present.
  source ./venv/bin/activate
  if [ -f requirements.txt ]; then 
	pip install -r requirements.txt
  fi
  deactivate

  # Setting up direnv file
  echo "source ./venv/bin/activate" > .envrc
  direnv allow .
  cd ..
  cd -
}

function mkpyreq() {
	pip freeze > requirements.txt
}

# I do not want any python package saving their data directly in $HOME
# Additional setting for jupyter.
export JUPYTER_CONFIG_DIR="$HOME/.config/jupyter"
export IPYTHONDIR="$HOME/.local/share/ipython"

# Additional setting for cookie cutter.
export COOKIECUTTER_CONFIG="$HOME/.config/cookiecutter/cookiecutterrc.secret"

# Intialize pyenv if present
export PYENV_ROOT="$HOME/.pyenv"
if [ -d "$PYENV_ROOT" ]; then
    pathprepend "$PYENV_ROOT/bin"
    if command -v pyenv > /dev/null 2>&1; then
    	# pyenv is supported in zsh through prezto; manually enabling for bash only.
    #if [ -n "$BASH_VERSION" ]; then
            eval "$(pyenv init --path)"
    		eval "$(pyenv init -)"
        	if [ -d $PYENV_ROOT/plugins/pyenv-virtualenv ]; then
        	    eval "$(pyenv virtualenv-init -)"
        	fi
    #	fi
    	pathprepend "$PYENV_ROOT/shims"
    	pathprepend "$PYENV_ROOT/plugins/pyenv-virtualenv/shims"
    
    	# Some pyenv alias
    	alias pa='pyenv activate'
    	alias pd='pyenv deactivate'
    	alias pl='pyenv local'
    	alias pg='pyenv global'
    	alias pi='pyenv install'
    	alias pv='pyenv virtualenv'
    
    	# Better integration between pipenv and pyenv
    	if [ -f $PYENV_ROOT/shims/python ] || [ -h $PYENV_ROOT/shims/python ]; then
    		export PIPENV_PYTHON=="$PYENV_ROOT/shims/python"
    	fi
    fi
fi

# Some alias for ipython
alias ipy='ipython'
alias jl='jupyter lab'
